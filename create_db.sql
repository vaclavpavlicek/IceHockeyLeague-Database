-- MySQL Script generated by MySQL Workbench
-- Tue 03 Apr 2018 10:05:12 PM CEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema extraliga
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema extraliga
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `extraliga` DEFAULT CHARACTER SET utf8 ;
USE `extraliga` ;

-- -----------------------------------------------------
-- Table `extraliga`.`Leagues`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`Leagues` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`Seasons`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`Seasons` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(9) NOT NULL,
  `startDate` DATE NOT NULL,
  `endDate` DATE NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`LeaguesSeasons`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`LeaguesSeasons` (
  `leagueId` INT NOT NULL,
  `seasonId` INT NOT NULL,
  PRIMARY KEY (`leagueId`, `seasonId`),
  INDEX `fk_Leagues_has_LeaguesSeasons_Leagues1_idx` (`leagueId` ASC),
  INDEX `fk_Leagues_has_LeaguesSeasons_LeaguesSeasons1_idx` (`seasonId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`Teams`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`Teams` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`TeamsLeaguesSeasons`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`TeamsLeaguesSeasons` (
  `teamsId` INT NOT NULL,
  `leagueId` INT NOT NULL,
  `seasonId` INT NOT NULL,
  PRIMARY KEY (`teamsId`, `leagueId`, `seasonId`),
  INDEX `fk_Teams_has_Leagues_has_LeaguesSeasons_Leagues_has_Leagues_idx` (`leagueId` ASC, `seasonId` ASC),
  INDEX `fk_Teams_has_Leagues_has_LeaguesSeasons_Teams1_idx` (`teamsId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`Arenas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`Arenas` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `latitude` DECIMAL(10,8) NOT NULL,
  `longitude` DECIMAL(10,8) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`Matches`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`Matches` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `teamHomeId` INT NOT NULL,
  `teamAwayId` INT NOT NULL,
  `goalsHome` TINYINT NOT NULL,
  `goalsAway` TINYINT NOT NULL,
  `arenaId` INT NOT NULL,
  `endType` ENUM('BASIC TIME', 'OVERTIME', 'SHOOTOUT') NOT NULL,
  `datetime` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `arenaId_idx` (`arenaId` ASC),
  INDEX `fk_Matches_Teams1_idx` (`teamHomeId` ASC),
  INDEX `fk_Matches_Teams2_idx` (`teamAwayId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`Countries`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`Countries` (
  `countryCode` CHAR(2) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`countryCode`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`People`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`People` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `gender` ENUM('MALE', 'FEMALE', 'OTHER') NOT NULL,
  `countryCode` CHAR(2) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_People_Country1_idx` (`countryCode` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`RefereesData`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`RefereesData` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `position` ENUM('MAIN', 'LINE') NOT NULL,
  `peopleId` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Referees_People1_idx` (`peopleId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`RefereesMatches`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`RefereesMatches` (
  `refereeId` INT NOT NULL,
  `matchId` INT NOT NULL,
  PRIMARY KEY (`refereeId`, `matchId`),
  INDEX `fk_Referees_has_Matches_Matches1_idx` (`matchId` ASC),
  INDEX `fk_Referees_has_Matches_Referees1_idx` (`refereeId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`PlayersData`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`PlayersData` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `number` SMALLINT NOT NULL,
  `salary` INT NOT NULL,
  `position` ENUM('GOALKEEPER', 'DEFENDER', 'FORWARD') NOT NULL,
  `peopleId` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Players_People1_idx` (`peopleId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`Goals`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`Goals` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `playerId` INT NOT NULL,
  `time` TIME NOT NULL,
  PRIMARY KEY (`id`, `playerId`),
  INDEX `fk_Goals_Players1_idx` (`playerId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`GoalsMatches`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`GoalsMatches` (
  `goalId` INT NOT NULL,
  `matchId` INT NOT NULL,
  PRIMARY KEY (`goalId`, `matchId`),
  INDEX `fk_Goals_has_Matches_Matches1_idx` (`matchId` ASC),
  INDEX `fk_Goals_has_Matches_Goals1_idx` (`goalId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`Passes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`Passes` (
  `goalId` INT NOT NULL,
  `playerId` INT NOT NULL,
  `order` INT NOT NULL,
  PRIMARY KEY (`goalId`, `playerId`),
  INDEX `fk_Passes_Players1_idx` (`playerId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`RealizationTeamData`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`RealizationTeamData` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `position` ENUM('MAIN COACH', 'COACH ASSITANT', 'SPORT MANAGER', 'VIDEO COACH', 'FITNESS COACH') NOT NULL,
  `teamId` INT NOT NULL,
  `peopleId` INT NOT NULL,
  PRIMARY KEY (`id`, `teamId`),
  INDEX `fk_RealizationTeam_Teams1_idx` (`teamId` ASC),
  INDEX `fk_RealizationTeam_People1_idx` (`peopleId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`TeamsPlayers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`TeamsPlayers` (
  `teamId` INT NOT NULL,
  `playerId` INT NOT NULL,
  `contractStart` DATE NOT NULL,
  `contractEnd` DATE NULL,
  PRIMARY KEY (`teamId`, `playerId`, `contractStart`),
  INDEX `fk_Teams_has_Players_Players1_idx` (`playerId` ASC),
  INDEX `fk_Teams_has_Players_Teams1_idx` (`teamId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`PenaltiesTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`PenaltiesTypes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `extraliga`.`Penalties`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`Penalties` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `matchId` INT NOT NULL,
  `playerId` VARCHAR(45) NOT NULL,
  `time` TIME NOT NULL,
  `duration` TIME NOT NULL,
  `typeId` INT NOT NULL,
  PRIMARY KEY (`id`, `matchId`),
  INDEX `fk_Penalties_Players1_idx` (`playerId` ASC),
  INDEX `fk_Penalties_PenaltiesTypes1_idx` (`typeId` ASC))
ENGINE = InnoDB;

USE `extraliga` ;

-- -----------------------------------------------------
-- Placeholder table for view `extraliga`.`Players`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`Players` (`'peopleId'` INT, `name` INT, `surname` INT, `gender` INT, `countryCode` INT, `'playerDataId'` INT, `number` INT, `salary` INT, `position` INT);

-- -----------------------------------------------------
-- Placeholder table for view `extraliga`.`RealizationTeam`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`RealizationTeam` (`'peopleId'` INT, `name` INT, `surname` INT, `gender` INT, `countryCode` INT, `'realizationTeamId'` INT, `position` INT, `teamId` INT);

-- -----------------------------------------------------
-- Placeholder table for view `extraliga`.`Referees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `extraliga`.`Referees` (`'peopleId'` INT, `name` INT, `surname` INT, `gender` INT, `countryCode` INT, `'refereesId'` INT, `position` INT);

-- -----------------------------------------------------
-- View `extraliga`.`Players`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `extraliga`.`Players`;
USE `extraliga`;
CREATE  OR REPLACE VIEW `Players` AS 
	SELECT People.id as 'peopleId', People.name, People.surname, People.gender, People.countryCode, PlayersData.id as 'playerDataId', PlayersData.number, PlayersData.salary, PlayersData.position FROM People
    JOIN PlayersData ON People.id = PlayersData.peopleId;

-- -----------------------------------------------------
-- View `extraliga`.`RealizationTeam`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `extraliga`.`RealizationTeam`;
USE `extraliga`;
CREATE  OR REPLACE VIEW `RealizationTeam` AS 
	SELECT People.id as 'peopleId', People.name, People.surname, People.gender, People.countryCode, RealizationTeamData.id as 'realizationTeamId', RealizationTeamData.position, RealizationTeamData.teamId FROM People 
    JOIN RealizationTeamData ON People.id = RealizationTeamData.peopleId;

-- -----------------------------------------------------
-- View `extraliga`.`Referees`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `extraliga`.`Referees`;
USE `extraliga`;
CREATE  OR REPLACE VIEW `Referees` AS 
	SELECT People.id as 'peopleId', People.name, People.surname, People.gender, People.countryCode, RefereesData.id as 'refereesId', RefereesData.position FROM People
    JOIN RefereesData ON People.id = RefereesData.peopleId;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

DELIMITER //
CREATE DEFINER = CURRENT_USER TRIGGER `extraliga`.`Matches_BEFORE_INSERT` BEFORE INSERT ON `Matches` FOR EACH ROW
BEGIN
	IF (NEW.teamHomeId = NEW.teamAwayId) THEN
		SIGNAL SQLSTATE '45000' SET message_text = 'Team home is same as team away.';
    END IF;
END//
DELIMITER ;

DELIMITER //
CREATE DEFINER = CURRENT_USER TRIGGER `extraliga`.`TeamsPlayers_BEFORE_INSERT` BEFORE INSERT ON `TeamsPlayers` FOR EACH ROW
BEGIN
	IF (NEW.contractEnd < NEW.contractStart) THEN
		SIGNAL SQLSTATE '45000' SET message_text = 'Contract start date is after contract end date.';
    END IF;
END//
DELIMITER ;